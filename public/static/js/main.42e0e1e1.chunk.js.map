{"version":3,"sources":["components/FormComponent/FormComponent.jsx","components/FormFieldComponent/FormFieldComponent.jsx","components/RecentLinkComponent/RecentLinkComponent.jsx","containers/LinkCheckerContainer/LinkCheckerContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["marketplaces","value","label","FormComponent","handleChange","event","_event$target","target","name","_this","setState","Object","defineProperty","isInputValid","selectMarketplace","console","log","handleBlur","field","fieldError","concat","state","RegExp","test","validateForm","touched","userTag","userAccessKey","userSecret","userUrl","marketplace","userTagError","userAccessKeyError","userSecretError","userUrlError","_this2","this","handleClick","props","_this$state","shouldMarkError","errorField","hasError","inputField","replace","react_default","a","createElement","Col","lg","className","styles","formComponent","Form","FormFieldComponent_FormFieldComponent","labelContents","href","errorClass","nameVal","val","fieldID","placeholderText","feedbackText","Label","for","react_select_browser_esm","id","defaultValue","options","onChange","Button","color","onClick","Component","FormFieldComponent","_this$props","Row","form","FormGroup","Input","type","onBlur","placeholder","FormFeedback","defaultProps","RecentLinkComponent","recentLink","index","width","size","socket","io","LinkCheckerContainer","classCallCheck","_super","call","scrapeInProgress","links","affiliateLinkCount","recentArticles","linksProcessed","currentArticleLink","socketID","testStopped","usingRetest","count","toConsumableArray","scroll","scrollToBottom","emit","barProgress","on","data","length","Events","scrollEvent","register","to","element","scrollSpy","update","remove","removeListener","results","filter","l","undefined","map","linkData","item","icon","validOnAmazon","itemName","tableRow","key","url","rel","urlText","tag","_this3","arguments","RecentLinkComponent_RecentLinkComponent","progress","_this4","items","displayAmazonResults","articleLinks","displayRecentArticles","progressText","Container","Jumbotron","fluid","FormComponent_FormComponent_FormComponent","Table","modules","Progress","stopOrRestartCurrentTest","hover","App","appContainer","LinkCheckerContainer_LinkCheckerContainer_LinkCheckerContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42e0e1e1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, Form, Col, Label}  from 'reactstrap'\nimport { FormFieldComponent } from 'components';\n\nimport styles from './FormComponent.scss'\n\nimport Select from 'react-select';\n\nconst marketplaces = [\n  { value: 'www.amazon.com', label: '🇺🇸 United States - www.amazon.com' },\n  { value: 'www.amazon.ca', label: '🇨🇦 Canada - www.amazon.ca' },\n  { value: 'www.amazon.com.mx', label: '🇲🇽 Mexico - www.amazon.com.mx' },\n  { value: 'www.amazon.com.br', label: '🇧🇷 Brazil - www.amazon.com.br' },\n  { value: 'www.amazon.co.uk', label: '🇬🇧 United Kingdom - www.amazon.co.uk' },\n  { value: 'www.amazon.de', label: '🇩🇪 Germany - www.amazon.de' },\n  { value: 'www.amazon.fr', label: '🇫🇷 France - www.amazon.fr' },\n  { value: 'www.amazon.es', label: '🇪🇸 Spain - www.amazon.es' },\n  { value: 'www.amazon.in', label: '🇮🇳 India - www.amazon.in' },\n  { value: 'www.amazon.it', label: '🇮🇹 Italy - www.amazon.it' },\n  { value: 'www.amazon.ae', label: '🇦🇪 Arab Emirates - www.amazon.ae' },\n  { value: 'www.amazon.sa', label: '🇸🇦 Saudi Arabia - www.amazon.sa' },\n  { value: 'www.amazon.com.tr', label: '🇹🇷 Turkey - www.amazon.com.tr' },\n  { value: 'www.amazon.nl', label: '🇳🇱 Netherlands - www.amazon.nl' },\n  { value: 'www.amazon.co.jp', label: '🇯🇵 Japan - www.amazon.co.jp' },\n  { value: 'www.amazon.com.au', label: '🇦🇺 Australia - www.amazon.com.au' },\n  { value: 'www.amazon.sg', label: '🇸🇬 Singapore - www.amazon.sg' }\n]\n\nexport default class FormComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({[event.target.name]: event.target.value}, () => {\n      this.isInputValid({name, value});\n    });\n  }\n\n  selectMarketplace = (event) => {\n    console.log(event);\n    this.setState({['marketplace']: event.value});\n  }\n\n  handleBlur = (event) => {\n    const { name } = event.target;\n    this.setState({[name]: event.target.value});\n  }\n\n  isInputValid = field => {\n    const { name, value } = field;\n    const fieldError = `${name}Error`;\n\n    if (this.state[name] === '') {\n      // this field is empty\n      this.setState({[fieldError]: true});\n    } else {\n      // something exists in this field \n      if (name === \"userUrl\") {\n        // see if this at least resembles a URL \n        // if it has http:// or https://, it's good enough for us\n        const hasHTTP = new RegExp(/(http:\\/\\/|https:\\/\\/)/).test(value);\n        if (hasHTTP) {\n          //console.log(\"this url has http!\", value);\n          this.setState({[fieldError]: false});\n        } else {\n          //console.log(\"This url does not have http(s)://\", value);\n          this.setState({[fieldError]: true});\n        }\n      } else {\n        this.setState({[fieldError]: false});\n      }\n    }\n  }\n\n  validateForm = () => {\n    //mark every field as touched\n    this.setState({\n      touched: { \n        'userTag': true,\n        'userAccessKey': true,\n        'userSecret':true,\n        'userUrl':true,\n      },\n    });\n\n    this.isInputValid({name: 'userTag', value: this.state.userUrl});\n    this.isInputValid({name: 'userAccessKey', value: this.state.userAccessKey});\n    this.isInputValid({name: 'userSecret', value: this.state.userSecret});\n    this.isInputValid({name: 'userUrl', value: this.state.userUrl});\n  }\n\n  state = {\n    userUrl:'https://streammentor.com/streaming-equipment',\n    userTag: 'no-need',\n    userAccessKey: 'no-need',\n    userSecret: 'no-need',\n    marketplace: marketplaces[0].value,\n    userTagError: '',\n    userAccessKeyError: '',\n    userSecretError: '',\n    userUrlError: '',\n    touched: {\n      'userTag': false,\n      'userAccessKey': false,\n      'userSecret': false,\n      'userUrl': false\n    }\n  }\n\n  render () {\n    const { handleClick } = this.props;\n    const { userUrl, userTag, userAccessKey, userSecret, marketplace } = this.state;\n\n    const shouldMarkError = (errorField) => {\n      // mark the field as being in error state if an error exists for it AND if it's been touched by the user\n      const hasError = this.state[errorField]; //errorField; // looks like 'userTagError'   //errors[field];\n      const inputField = errorField.replace(\"Error\", \"\"); // remove the Error part\n      const touched = this.state.touched[inputField]; \n      //console.log(inputField + \" error status: \" + hasError + \" | touched status is: \" + touched);\n\n      // if this field has an error, return true if touched is true, else false \n      return hasError ? touched : false;\n    };\n\n    return (\n      <Col lg={6}>\n        <div className={styles.formComponent}>\n          <Form>\n            <FormFieldComponent \n              labelContents={<span>Your <a href=\"https://docs.aws.amazon.com/AWSECommerceService/latest/DG/becomingAssociate.html\">Amazon Associate</a> Tag</span>} \n              errorClass={shouldMarkError('userTagError') ? \"is-invalid\" : \"\"}\n              nameVal=\"userTag\"\n              val={userTag}\n              fieldID=\"enter-tag\"\n              handleChange={this.handleChange}\n              handleBlur={this.handleBlur}\n              placeholderText=\"your-tag-20\"\n              feedbackText=\"Must include Amazon Associate Tag\"/>\n\n            <FormFieldComponent \n              labelContents={<span>Your <a href=\"https://webservices.amazon.com/paapi5/documentation/register-for-pa-api.html\">Access Key ID</a></span>}\n              errorClass={shouldMarkError('userAccessKeyError') ? \"is-invalid\" : \"\"}\n              nameVal=\"userAccessKey\"\n              val={userAccessKey} \n              fieldID=\"enter-key-id\" \n              handleChange={this.handleChange}\n              handleBlur={this.handleBlur}\n              placeholderText=\"Access key ID\" \n              feedbackText=\"Please provide your Access Key ID\"/>\n\n            <FormFieldComponent \n              labelContents={<span>Your <a href=\"https://webservices.amazon.com/paapi5/documentation/register-for-pa-api.html\">Secret Access Key</a></span>}\n              errorClass={shouldMarkError('userSecretError') ? \"is-invalid\" : \"\"}\n              nameVal=\"userSecret\"\n              val={userSecret}\n              fieldID=\"enter-secret\" \n              handleChange={this.handleChange}\n              handleBlur={this.handleBlur}\n              placeholderText=\"Secret Access Key\" \n              feedbackText=\"Please provide your Secret Access Key\"/>\n\n            <FormFieldComponent \n              labelContents={'Your Article URL'}\n              errorClass={shouldMarkError('userUrlError') ? \"is-invalid\" : \"\"}\n              nameVal=\"userUrl\"\n              val={userUrl} \n              fieldID=\"enter-url\"\n              handleChange={this.handleChange}\n              handleBlur={this.handleBlur}\n              placeholderText=\"http://your-site.com/yourarticle\" \n              feedbackText=\"Must enter the URL to an article (include http:// or https://)\"/>\n\n            <Label for=\"marketplace-select\">Marketplace</Label>\n            <Select\n              id=\"marketplace-select\"\n              name=\"marketplace\"\n              defaultValue={marketplaces[0]}\n              options={marketplaces}\n              onChange={this.selectMarketplace}\n              />\n\n              <br/>\n              \n            <Button\n              id=\"button-submit-form\"\n              color=\"primary\"\n              onClick={() => handleClick(userUrl, this.validateForm, userAccessKey, userSecret, userTag, marketplace)}>\n            Test\n            </Button>\n          </Form>\n        </div>\n      </Col>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Label, Input, FormGroup, Row, Col, FormFeedback } from 'reactstrap'\n\nexport default class FormFieldComponent extends Component {\n    static propTypes = {\n        fieldID: PropTypes.string,\n        errorClass: PropTypes.string,\n        nameVal: PropTypes.string,\n        val: PropTypes.string,\n        placeholderText: PropTypes.string\n    }\n\n    static defaultProps = {\n        fieldID: '',\n        labelContents: '',\n        errorClass: '',\n        nameVal: '',\n        val: '',\n        placeholderText: ''\n    }\n\n    render() {\n        const { fieldID, labelContents, errorClass, nameVal, val, handleChange, handleBlur, feedbackText, placeholderText } = this.props;\n        return (\n            <Row form>\n                <Col lg={12}>\n                    <FormGroup>\n                        <Label for={fieldID}>{labelContents}</Label>\n                        <Input\n                            className={errorClass}\n                            type=\"text\"\n                            name={nameVal}\n                            value={val}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            id={fieldID}\n                            placeholder={placeholderText} />\n                        <FormFeedback>{feedbackText}</FormFeedback>\n                    </FormGroup>\n                </Col>\n            </Row>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\n\nexport default class RecentLinkComponent extends Component {\n\n    static defaultProps = {\n        recentLink: ''\n    }\n\n    render() {\n        const { recentLink, index, handleClick } = this.props;\n\n        return (\n            <tr>\n                <td className=\"tableUsersLinkText\">\n                    <a href={recentLink} id={\"recent-url-\" + index}>{recentLink}</a>\n                </td>\n                <td width='80'>\n                    <Button\n                        color=\"warning\"\n                        size=\"sm\"\n                        id={\"button-retest-\" + index}\n                        onClick={handleClick}>\n                        Re-test\n                              </Button>\n                </td>\n            </tr>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Table, Jumbotron, Row, Col, Progress, Button } from 'reactstrap';\nimport { FormComponent, RecentLinkComponent } from 'components';\n//import * as Scroll from 'react-scroll';\nimport { Element, Events, animateScroll as scroll, scrollSpy } from 'react-scroll'\nimport io from 'socket.io-client';\n\nimport styles from './LinkCheckerContainer.scss';\n\nlet socket = io(); //production\n\nexport default class LinkCheckerContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.barProgress = 0;\n        if (process.env.NODE_ENV !== 'production') {\n            socket = io('http://localhost:3000');\n        }\n    }\n\n    static propTypes = {\n        dispatch: PropTypes.func\n    }\n\n    state = {\n        scrapeInProgress: false,\n        links: [],\n        affiliateLinkCount: -1,\n        recentArticles: [],\n        linksProcessed: 0,\n        currentArticleLink: '',\n        socketID: '',\n        testStopped: false,\n        userAccessKey: '',\n        userSecret: '',\n        userTag: '',\n        marketplace: ''\n    }\n\n    componentDidMount() {\n        socket.on('connect', () => {\n            if (socket.id) {\n                //console.log('connected to the server, id: ', socket.id);\n                this.setState({ socketID: socket.id });\n            } else {\n                console.log(\"no socket id\");\n            }\n        });\n\n        socket.on('staticDataReceived', (data) => {\n            if (data.length) {\n                this.setState({ links: data });\n            }\n            //else, no data was received \n        });\n\n        socket.on('urlsScraped', (count) => {\n            this.setState({ affiliateLinkCount: count });\n            this.setState({ linksProcessed: 0 });\n            this.setState({ links: [] });\n        });\n\n        socket.on('serverDataReceived', (data, linksProcessed, scrapeInProgress) => {\n            //gets it as a whole chunk, redraw UI to capture all the pieces that were updated\n            if (data) {\n                this.setState({ links: data }); //[...this.state.links, data] });\n                this.setState({ linksProcessed: linksProcessed });\n                this.setState({ scrapeInProgress });\n            } else {\n                console.log(\"No data came back\");\n            }\n        });\n\n        Events.scrollEvent.register('begin', function (to, element) {\n            //console.log(\"begin\", arguments);\n        });\n\n        Events.scrollEvent.register('end', function (to, element) {\n            //console.log(\"end\", arguments);\n        });\n\n        scrollSpy.update();\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove('begin');\n        Events.scrollEvent.remove('end');\n        socket.removeListener('staticDataReceived');\n        socket.removeListener('urlsScraped');\n        socket.removeListener('serverDataReceived');\n    }\n\n\n    handleClick = (userUrl, validateForm, userAccessKey, userSecret, userTag, marketplace) => {\n        // only used for the form, no call to validateForm is made when using a re-test button\n        let usingRetest = true;\n        if (validateForm) {\n            validateForm();\n            usingRetest = false;\n        }\n\n        const hasHTTP = new RegExp(/(http:\\/\\/|https:\\/\\/)/).test(userUrl);\n        if (hasHTTP) {\n            if (userAccessKey && userSecret && userTag) {\n                this.setState({ scrapeInProgress: true });\n                this.setState({ links: [] });\n                this.setState({ count: 0 });\n                this.setState({ linksProcessed: 0 });\n                this.setState({ affiliateLinkCount: -1 });\n                this.setState({ currentArticleLink: userUrl });\n                this.setState({ userAccessKey: userAccessKey });\n                this.setState({ userSecret: userSecret });\n                this.setState({ userTag: userTag });\n                this.setState({ marketplace: marketplace });\n\n                if (!usingRetest) {\n                    //so re-tested URLs dont get re-added to the recently tested list \n                    this.setState({ recentArticles: [userUrl, ...this.state.recentArticles] });\n                }\n\n                /* would rather use this one but it doesn't work \n                scroll.scrollTo('scrollToElement', {\n                  duration: 800,\n                  delay: 0,\n                  smooth: 'easeInOutQuart',\n                  containerId: 'app-container',\n                  isDynamic: true\n                }) */\n\n                scroll.scrollToBottom();\n\n                //dispatch(fetchDemo(userUrl, this.state.socketID));\n                this.setState({ testStopped: false });\n                socket.emit('beginProcessing', userUrl, this.state.socketID, userAccessKey, userSecret, userTag, marketplace);\n            } else {\n                console.log(\"One or more Amazon credential(s) are missing\");\n            }\n        } else {\n            console.log(\"This url does not have http(s)://\", userUrl);\n        }\n    }\n\n    displayAmazonResults(results) {\n        return results.filter(l => l !== null && l !== undefined)\n            .map((linkData, index) => {\n                const item = linkData;\n\n                let icon = \"glyphicon glyphicon-remove text-danger\";\n\n                if (item.validOnAmazon) {\n                    icon = \"glyphicon glyphicon-ok text-success\";\n                }\n\n                if (item.itemName === \"Processing...\") {\n                    icon = \"glyphicon glyphicon-question-sign text-muted\"\n                }\n\n                let tableRow = <tr key={index}>\n                    <td className=\"tableUsersLinkText\">\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.urlText}</a>\n                    </td>\n                    <td>\n                        <span className={icon}></span>\n                    </td>\n                    <td className=\"tableProductTitle\">{item.itemName}<br /><small><b>Tag: {item.tag}</b></small></td>\n                </tr>;\n                return item || item.url ? tableRow : tableRow; //null;\n            });\n    }\n\n    displayRecentArticles(results = []) {\n        return results.filter(l => l !== null && l !== undefined)\n            .map((recentLink, index) => {\n                let listItem = <RecentLinkComponent recentLink={recentLink} handleClick={() => this.handleClick(recentLink, '', this.state.userAccessKey, this.state.userSecret, this.state.userTag, this.state.marketplace)} key={index} index={index} />;\n                return (index < 8) ? listItem : null\n            })\n    }\n\n    stopOrRestartCurrentTest(url, progress) {\n        if (progress < 100) {\n            //stopping (halting) current test\n            this.setState({ testStopped: true });\n            socket.emit('stopSignal', this.state.socketID);\n        } else if (progress >= 100) {\n            //restarting current test\n            //re-uses saved user credentials; may want to take from form again \n            this.handleClick(url, '', this.state.userAccessKey, this.state.userSecret, this.state.userTag, this.state.marketplace);\n        }\n\n    }\n\n    render() {\n        const { links, affiliateLinkCount, recentArticles, linksProcessed, scrapeInProgress, currentArticleLink } = this.state;\n\n        const items = links.length ? this.displayAmazonResults(links) : null;\n        const articleLinks = recentArticles.length ? this.displayRecentArticles(recentArticles) : null;\n\n        let progressText = `Reticulating splines...`;\n\n        if (scrapeInProgress) {\n            this.barProgress = 2;\n            progressText = `Scraping your site for Amazon links...`;\n        } else { \n            if (linksProcessed === 0 && affiliateLinkCount === 0) {\n                //done scraping and no links were found\n                this.barProgress = 100;\n                progressText = `No links found`;\n            } else if (linksProcessed > 0 && linksProcessed < affiliateLinkCount) {\n                // started to process links but not done yet \n                this.barProgress = ((linksProcessed / affiliateLinkCount) * 100);\n                progressText = `Checking with Amazon (finished ${linksProcessed} of ${affiliateLinkCount}))`;\n            } else if ((linksProcessed >= affiliateLinkCount) && affiliateLinkCount > 0) {\n                // processed all the links (done)\n                this.barProgress = 100;\n                progressText = `Done!`;\n            }\n        }\n\n        if (this.state.testStopped) {\n            this.barProgress = 100;\n            progressText = `Test stopped by user!`;\n        } \n        \n\n        return (\n            <div>\n                <Container id=\"app-container\" className={styles.LinkCheckerContainer}>\n\n                    <Jumbotron fluid>\n                        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n                        <h2 id=\"link-checker-title\">Amazin' Affiliate Link Checker</h2>\n                        <p>Identify broken, outdated and mis-tagged Amazon product links in your blog articles.<br />Requires an Amazon Associates account and Amazon Product Advertising API credentials. <a href=\"/\"><br />Watch a demo video.</a></p>\n\n                        <Row>\n                            <FormComponent handleClick={this.handleClick} />\n\n                            <Col lg={6}>\n                                <div>\n                                    <h4>Recently tested urls</h4>\n                                    <Table>\n                                        <tbody id=\"recent-article-links\">\n                                            {articleLinks}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </Col>\n                        </Row>\n\n                    </Jumbotron>\n\n                    <Element name=\"scrollToElement\" className=\"element\"></Element>\n\n                    <div className={(this.barProgress === 0) ? 'hidden' : ''}>\n                        <h3 id=\"progress\">Progress</h3>\n                        <p className={(currentArticleLink === '') ? 'hidden' : ''}><label>Your article's URL</label><br /> <a href={currentArticleLink}>{currentArticleLink}</a></p>\n\n                        <div className=\"pad-bottom\">\n                            <div className=\"text-center\">{progressText}\n                                <Progress color=\"info\" value={this.barProgress} />\n                            </div>\n                            <Button\n                                className={(this.barProgress < 100) ? 'btn-danger center-block' : 'btn-warning center-block'}\n                                onClick={() => this.stopOrRestartCurrentTest(currentArticleLink, this.barProgress)}\n                            >\n                                {(this.barProgress < 100 && !this.state.testStopped) ? 'Stop test' : 'Re-run test'}\n                            </Button>\n                        </div>\n                    </div>\n\n                    <div className={(this.barProgress === 0) ? 'hidden' : ''}> \n                        <h3>Results</h3>\n                        <p>{linksProcessed} / {affiliateLinkCount} Affiliate links processed</p>\n                        <Table hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th width='120'>Your article's Amazon links</th>\n                                    <th width='60'>Valid</th>\n                                    <th width='300'>Product title</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items}\n                            </tbody>\n                        </Table>\n                    </div>\n                </Container>\n\n                <Container fluid className=\"dark-grey-bg\">\n                    <Row className=\"pad-footer\">\n                        <Col lg=\"5\">\n                            <label>Who this tool is for</label>\n                            <p>This tool is intended for Amazon Associates (\"affiliates\") with established websites.</p>\n                            <label>Why use this tool</label>\n                            <p>For a variety of reasons, your site's Amazon.com product links may become outdated. When this happens, your visitors end up on 404 pages (\"dog pages\") instead of the product(s) you meant to show them. This tool helps you quickly locate those dead links.</p>\n                            <label>How it works</label>\n                            <p>This tool scans your article for Amazon product links. It extracts a product ID from each link and checks that the product ID is valid. This website does not store your credentials or any information about your site.</p>\n                        </Col>\n                        <Col lg=\"1\"></Col>\n                        <Col lg=\"5\">\n                            <label>Interpreting your results</label>\n                            <p>Unfortunately, not every product on Amazon is in the Amazon Product Advertising API. Valid links may be marked \"invalid\" by this tool if the product doesn't exist in the API, even if it exists on Amazon.</p>\n                            <p>The tool also considers links to Amazon.com search results to be \"invalid\" even though they are perfectly acceptable to Amazon and your site's users.</p>\n                            <p>You should manually confirm any \"invalid\" results you get.</p>\n                            <label>About the author</label>\n                            <p>This tool was created by blogger and web developer <a href=\"https://github.com/MJGrant\">Mandi Burley</a>.</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { LinkCheckerContainer } from 'containers'\nimport styles from './App.scss'\n\nfunction App() {\n  return (\n    <div className={styles.appContainer}>\n      <LinkCheckerContainer />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}